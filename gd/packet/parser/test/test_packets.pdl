little_endian_packets

custom_field SixBytes : 48 "packet/parser/test/"

packet Parent {
  _fixed_ = 0x12 : 8,
  _size_(_payload_) : 8,
  _payload_,
  footer : 8,
}

packet Child : Parent {
  field_name : 16,
}

enum FourBits : 4 {
  ONE = 1,
  TWO = 2,
  THREE = 3,
  LAZY_ME = 15,
}

packet ParentTwo {
  _reserved_ : 4,
  four_bits : FourBits,
  _payload_,
}

packet ChildTwoThree : ParentTwo (four_bits = THREE) {
  more_bits : FourBits,
  _reserved_ : 4,
  sixteen_bits : 16
}

packet ChildTwoTwo : ParentTwo (four_bits = TWO) {
  more_bits : FourBits,
  _reserved_ : 4,
}

packet ChildTwoTwoThree :ChildTwoTwo (more_bits = THREE) {
}

packet ParentWithSixBytes {
  two_bytes : 16,
  six_bytes : SixBytes,
  _payload_,
}

packet ChildWithSixBytes : ParentWithSixBytes (two_bytes = 0x1234) {
  child_six_bytes : SixBytes,
}

checksum SimpleSum : 16 "packet/parser/test/"

packet ParentWithSum {
  two_bytes : 16,
  _checksum_start_(example_checksum),
  sum_bytes : 16,
  _payload_,
  example_checksum : SimpleSum,
}

packet ChildWithSum : ParentWithSum {
  more_bytes : 32,
  another_byte : 8,
}

packet ChildWithNestedSum : ParentWithSum {
  _checksum_start_(nested_checksum),
  more_bytes : 32,
  nested_checksum : SimpleSum,
}

packet ParentSizeModifier {
  _size_(_payload_) : 8,
  _payload_ : [+2*8], // Include two_bytes in the size
  two_bytes : 16,
}

packet ChildSizeModifier : ParentSizeModifier (two_bytes = 0x1211) {
  more_bytes : 32,
}

packet FieldsEndWithNumbers {
  field_1 : 16,
  field_2 : 16,
  field_10 : 16,
  field_11 : 16,
}

enum ForArrays : 16 {
  ONE = 0x0001,
  TWO = 0x0002,
  ONE_TWO = 0x0201,
  TWO_THREE = 0x0302,
  FFFF = 0xffff,
}

packet FixedArrayEnum {
  enum_array : ForArrays[5],
}

packet SizedArrayEnum {
  _size_(enum_array) : 16,
  enum_array : ForArrays[],
}

packet CountArrayEnum {
  _count_(enum_array) : 8,
  enum_array : ForArrays[],
}

packet SizedArrayCustom {
  _size_(six_bytes_array) : 8,
  an_extra_byte : 8,
  six_bytes_array : SixBytes[+1],
}

packet FixedArrayCustom {
  six_bytes_array : SixBytes[5],
}

packet CountArrayCustom {
  _count_(six_bytes_array) : 8,
  six_bytes_array : SixBytes[],
}
